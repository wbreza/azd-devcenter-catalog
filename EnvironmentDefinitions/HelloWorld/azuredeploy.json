{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
      "_generator": {
        "name": "bicep",
        "version": "0.25.53.49325",
        "templateHash": "8628308355027089452"
      }
    },
    "parameters": {
      "environmentName": {
        "type": "string",
        "minLength": 1,
        "maxLength": 64,
        "metadata": {
          "description": "Name of the the environment which is used to generate a short unique hash used in all resources."
        }
      },
      "location": {
        "type": "string",
        "minLength": 1,
        "metadata": {
          "description": "Primary location for all resources"
        }
      },
      "serviceName": {
        "type": "string",
        "defaultValue": ""
      },
      "appServicePlanName": {
        "type": "string",
        "defaultValue": ""
      }
    },
    "variables": {
      "$fxv#0": {
        "analysisServicesServers": "as",
        "apiManagementService": "apim-",
        "appConfigurationConfigurationStores": "appcs-",
        "appManagedEnvironments": "cae-",
        "appContainerApps": "ca-",
        "authorizationPolicyDefinitions": "policy-",
        "automationAutomationAccounts": "aa-",
        "blueprintBlueprints": "bp-",
        "blueprintBlueprintsArtifacts": "bpa-",
        "cacheRedis": "redis-",
        "cdnProfiles": "cdnp-",
        "cdnProfilesEndpoints": "cdne-",
        "cognitiveServicesAccounts": "cog-",
        "cognitiveServicesFormRecognizer": "cog-fr-",
        "cognitiveServicesTextAnalytics": "cog-ta-",
        "computeAvailabilitySets": "avail-",
        "computeCloudServices": "cld-",
        "computeDiskEncryptionSets": "des",
        "computeDisks": "disk",
        "computeDisksOs": "osdisk",
        "computeGalleries": "gal",
        "computeSnapshots": "snap-",
        "computeVirtualMachines": "vm",
        "computeVirtualMachineScaleSets": "vmss-",
        "containerInstanceContainerGroups": "ci",
        "containerRegistryRegistries": "cr",
        "containerServiceManagedClusters": "aks-",
        "databricksWorkspaces": "dbw-",
        "dataFactoryFactories": "adf-",
        "dataLakeAnalyticsAccounts": "dla",
        "dataLakeStoreAccounts": "dls",
        "dataMigrationServices": "dms-",
        "dBforMySQLServers": "mysql-",
        "dBforPostgreSQLServers": "psql-",
        "devicesIotHubs": "iot-",
        "devicesProvisioningServices": "provs-",
        "devicesProvisioningServicesCertificates": "pcert-",
        "documentDBDatabaseAccounts": "cosmos-",
        "eventGridDomains": "evgd-",
        "eventGridDomainsTopics": "evgt-",
        "eventGridEventSubscriptions": "evgs-",
        "eventHubNamespaces": "evhns-",
        "eventHubNamespacesEventHubs": "evh-",
        "hdInsightClustersHadoop": "hadoop-",
        "hdInsightClustersHbase": "hbase-",
        "hdInsightClustersKafka": "kafka-",
        "hdInsightClustersMl": "mls-",
        "hdInsightClustersSpark": "spark-",
        "hdInsightClustersStorm": "storm-",
        "hybridComputeMachines": "arcs-",
        "insightsActionGroups": "ag-",
        "insightsComponents": "appi-",
        "keyVaultVaults": "kv-",
        "kubernetesConnectedClusters": "arck",
        "kustoClusters": "dec",
        "kustoClustersDatabases": "dedb",
        "loadTesting": "lt-",
        "logicIntegrationAccounts": "ia-",
        "logicWorkflows": "logic-",
        "machineLearningServicesWorkspaces": "mlw-",
        "managedIdentityUserAssignedIdentities": "id-",
        "managementManagementGroups": "mg-",
        "migrateAssessmentProjects": "migr-",
        "networkApplicationGateways": "agw-",
        "networkApplicationSecurityGroups": "asg-",
        "networkAzureFirewalls": "afw-",
        "networkBastionHosts": "bas-",
        "networkConnections": "con-",
        "networkDnsZones": "dnsz-",
        "networkExpressRouteCircuits": "erc-",
        "networkFirewallPolicies": "afwp-",
        "networkFirewallPoliciesWebApplication": "waf",
        "networkFirewallPoliciesRuleGroups": "wafrg",
        "networkFrontDoors": "fd-",
        "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
        "networkLoadBalancersExternal": "lbe-",
        "networkLoadBalancersInternal": "lbi-",
        "networkLoadBalancersInboundNatRules": "rule-",
        "networkLocalNetworkGateways": "lgw-",
        "networkNatGateways": "ng-",
        "networkNetworkInterfaces": "nic-",
        "networkNetworkSecurityGroups": "nsg-",
        "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
        "networkNetworkWatchers": "nw-",
        "networkPrivateDnsZones": "pdnsz-",
        "networkPrivateLinkServices": "pl-",
        "networkPublicIPAddresses": "pip-",
        "networkPublicIPPrefixes": "ippre-",
        "networkRouteFilters": "rf-",
        "networkRouteTables": "rt-",
        "networkRouteTablesRoutes": "udr-",
        "networkTrafficManagerProfiles": "traf-",
        "networkVirtualNetworkGateways": "vgw-",
        "networkVirtualNetworks": "vnet-",
        "networkVirtualNetworksSubnets": "snet-",
        "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
        "networkVirtualWans": "vwan-",
        "networkVpnGateways": "vpng-",
        "networkVpnGatewaysVpnConnections": "vcn-",
        "networkVpnGatewaysVpnSites": "vst-",
        "notificationHubsNamespaces": "ntfns-",
        "notificationHubsNamespacesNotificationHubs": "ntf-",
        "operationalInsightsWorkspaces": "log-",
        "portalDashboards": "dash-",
        "powerBIDedicatedCapacities": "pbi-",
        "purviewAccounts": "pview-",
        "recoveryServicesVaults": "rsv-",
        "resourcesResourceGroups": "rg-",
        "searchSearchServices": "srch-",
        "serviceBusNamespaces": "sb-",
        "serviceBusNamespacesQueues": "sbq-",
        "serviceBusNamespacesTopics": "sbt-",
        "serviceEndPointPolicies": "se-",
        "serviceFabricClusters": "sf-",
        "signalRServiceSignalR": "sigr",
        "sqlManagedInstances": "sqlmi-",
        "sqlServers": "sql-",
        "sqlServersDataWarehouse": "sqldw-",
        "sqlServersDatabases": "sqldb-",
        "sqlServersDatabasesStretch": "sqlstrdb-",
        "storageStorageAccounts": "st",
        "storageStorageAccountsVm": "stvm",
        "storSimpleManagers": "ssimp",
        "streamAnalyticsCluster": "asa-",
        "synapseWorkspaces": "syn",
        "synapseWorkspacesAnalyticsWorkspaces": "synw",
        "synapseWorkspacesSqlPoolsDedicated": "syndp",
        "synapseWorkspacesSqlPoolsSpark": "synsp",
        "timeSeriesInsightsEnvironments": "tsi-",
        "webServerFarms": "plan-",
        "webSitesAppService": "app-",
        "webSitesAppServiceEnvironment": "ase-",
        "webSitesFunctions": "func-",
        "webStaticSites": "stapp-"
      },
      "abbrs": "[variables('$fxv#0')]",
      "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]",
      "tags": {
        "azd-env-name": "[parameters('environmentName')]"
      }
    },
    "resources": [
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2022-09-01",
        "name": "helloworld",
        "properties": {
          "expressionEvaluationOptions": {
            "scope": "inner"
          },
          "mode": "Incremental",
          "parameters": {
            "name": "[if(not(empty(parameters('serviceName'))), createObject('value', parameters('serviceName')), createObject('value', format('{0}helloworld-{1}', variables('abbrs').webSitesAppService, variables('resourceToken'))))]",
            "location": {
              "value": "[parameters('location')]"
            },
            "tags": {
              "value": "[variables('tags')]"
            },
            "appServicePlanId": {
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appserviceplan'), '2022-09-01').outputs.id.value]"
            }
          },
          "template": {
            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "metadata": {
              "_generator": {
                "name": "bicep",
                "version": "0.25.53.49325",
                "templateHash": "12313645452229774503"
              }
            },
            "parameters": {
              "name": {
                "type": "string"
              },
              "location": {
                "type": "string",
                "defaultValue": "[resourceGroup().location]"
              },
              "tags": {
                "type": "object",
                "defaultValue": {}
              },
              "appCommandLine": {
                "type": "string",
                "defaultValue": ""
              },
              "appServicePlanId": {
                "type": "string"
              },
              "serviceName": {
                "type": "string",
                "defaultValue": "helloworld"
              }
            },
            "resources": [
              {
                "type": "Microsoft.Resources/deployments",
                "apiVersion": "2022-09-01",
                "name": "[format('{0}-app-module', parameters('name'))]",
                "properties": {
                  "expressionEvaluationOptions": {
                    "scope": "inner"
                  },
                  "mode": "Incremental",
                  "parameters": {
                    "name": {
                      "value": "[parameters('name')]"
                    },
                    "location": {
                      "value": "[parameters('location')]"
                    },
                    "tags": {
                      "value": "[union(parameters('tags'), createObject('azd-service-name', parameters('serviceName')))]"
                    },
                    "appCommandLine": {
                      "value": "[parameters('appCommandLine')]"
                    },
                    "appServicePlanId": {
                      "value": "[parameters('appServicePlanId')]"
                    },
                    "runtimeName": {
                      "value": "node"
                    },
                    "runtimeVersion": {
                      "value": "18-lts"
                    },
                    "scmDoBuildDuringDeployment": {
                      "value": true
                    }
                  },
                  "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "metadata": {
                      "_generator": {
                        "name": "bicep",
                        "version": "0.25.53.49325",
                        "templateHash": "3548910797978781823"
                      },
                      "description": "Creates an Azure App Service in an existing Azure App Service plan."
                    },
                    "parameters": {
                      "name": {
                        "type": "string"
                      },
                      "location": {
                        "type": "string",
                        "defaultValue": "[resourceGroup().location]"
                      },
                      "tags": {
                        "type": "object",
                        "defaultValue": {}
                      },
                      "applicationInsightsName": {
                        "type": "string",
                        "defaultValue": ""
                      },
                      "appServicePlanId": {
                        "type": "string"
                      },
                      "keyVaultName": {
                        "type": "string",
                        "defaultValue": ""
                      },
                      "managedIdentity": {
                        "type": "bool",
                        "defaultValue": "[not(empty(parameters('keyVaultName')))]"
                      },
                      "runtimeName": {
                        "type": "string",
                        "allowedValues": [
                          "dotnet",
                          "dotnetcore",
                          "dotnet-isolated",
                          "node",
                          "python",
                          "java",
                          "powershell",
                          "custom"
                        ]
                      },
                      "runtimeNameAndVersion": {
                        "type": "string",
                        "defaultValue": "[format('{0}|{1}', parameters('runtimeName'), parameters('runtimeVersion'))]"
                      },
                      "runtimeVersion": {
                        "type": "string"
                      },
                      "kind": {
                        "type": "string",
                        "defaultValue": "app,linux"
                      },
                      "allowedOrigins": {
                        "type": "array",
                        "defaultValue": []
                      },
                      "alwaysOn": {
                        "type": "bool",
                        "defaultValue": true
                      },
                      "appCommandLine": {
                        "type": "string",
                        "defaultValue": ""
                      },
                      "clientAffinityEnabled": {
                        "type": "bool",
                        "defaultValue": false
                      },
                      "enableOryxBuild": {
                        "type": "bool",
                        "defaultValue": "[contains(parameters('kind'), 'linux')]"
                      },
                      "functionAppScaleLimit": {
                        "type": "int",
                        "defaultValue": -1
                      },
                      "linuxFxVersion": {
                        "type": "string",
                        "defaultValue": "[parameters('runtimeNameAndVersion')]"
                      },
                      "minimumElasticInstanceCount": {
                        "type": "int",
                        "defaultValue": -1
                      },
                      "numberOfWorkers": {
                        "type": "int",
                        "defaultValue": -1
                      },
                      "scmDoBuildDuringDeployment": {
                        "type": "bool",
                        "defaultValue": false
                      },
                      "use32BitWorkerProcess": {
                        "type": "bool",
                        "defaultValue": false
                      },
                      "ftpsState": {
                        "type": "string",
                        "defaultValue": "FtpsOnly"
                      },
                      "healthCheckPath": {
                        "type": "string",
                        "defaultValue": ""
                      }
                    },
                    "resources": [
                      {
                        "type": "Microsoft.Web/sites/config",
                        "apiVersion": "2022-03-01",
                        "name": "[format('{0}/{1}', parameters('name'), 'logs')]",
                        "properties": {
                          "applicationLogs": {
                            "fileSystem": {
                              "level": "Verbose"
                            }
                          },
                          "detailedErrorMessages": {
                            "enabled": true
                          },
                          "failedRequestsTracing": {
                            "enabled": true
                          },
                          "httpLogs": {
                            "fileSystem": {
                              "enabled": true,
                              "retentionInDays": 1,
                              "retentionInMb": 35
                            }
                          }
                        },
                        "dependsOn": [
                          "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                        ]
                      },
                      {
                        "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
                        "apiVersion": "2022-03-01",
                        "name": "[format('{0}/{1}', parameters('name'), 'ftp')]",
                        "properties": {
                          "allow": false
                        },
                        "dependsOn": [
                          "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                        ]
                      },
                      {
                        "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
                        "apiVersion": "2022-03-01",
                        "name": "[format('{0}/{1}', parameters('name'), 'scm')]",
                        "properties": {
                          "allow": false
                        },
                        "dependsOn": [
                          "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                        ]
                      },
                      {
                        "type": "Microsoft.Web/sites",
                        "apiVersion": "2022-03-01",
                        "name": "[parameters('name')]",
                        "location": "[parameters('location')]",
                        "tags": "[parameters('tags')]",
                        "kind": "[parameters('kind')]",
                        "properties": {
                          "serverFarmId": "[parameters('appServicePlanId')]",
                          "siteConfig": {
                            "linuxFxVersion": "[parameters('linuxFxVersion')]",
                            "alwaysOn": "[parameters('alwaysOn')]",
                            "ftpsState": "[parameters('ftpsState')]",
                            "minTlsVersion": "1.2",
                            "appCommandLine": "[parameters('appCommandLine')]",
                            "numberOfWorkers": "[if(not(equals(parameters('numberOfWorkers'), -1)), parameters('numberOfWorkers'), null())]",
                            "minimumElasticInstanceCount": "[if(not(equals(parameters('minimumElasticInstanceCount'), -1)), parameters('minimumElasticInstanceCount'), null())]",
                            "use32BitWorkerProcess": "[parameters('use32BitWorkerProcess')]",
                            "functionAppScaleLimit": "[if(not(equals(parameters('functionAppScaleLimit'), -1)), parameters('functionAppScaleLimit'), null())]",
                            "healthCheckPath": "[parameters('healthCheckPath')]",
                            "cors": {
                              "allowedOrigins": "[union(createArray('https://portal.azure.com', 'https://ms.portal.azure.com'), parameters('allowedOrigins'))]"
                            }
                          },
                          "clientAffinityEnabled": "[parameters('clientAffinityEnabled')]",
                          "httpsOnly": true
                        },
                        "identity": {
                          "type": "[if(parameters('managedIdentity'), 'SystemAssigned', 'None')]"
                        }
                      },
                      {
                        "type": "Microsoft.Resources/deployments",
                        "apiVersion": "2022-09-01",
                        "name": "[format('{0}-appSettings', parameters('name'))]",
                        "properties": {
                          "expressionEvaluationOptions": {
                            "scope": "inner"
                          },
                          "mode": "Incremental",
                          "parameters": {
                            "name": {
                              "value": "[parameters('name')]"
                            },
                            "appSettings": {
                              "value": "[union(createObject('SCM_DO_BUILD_DURING_DEPLOYMENT', string(parameters('scmDoBuildDuringDeployment')), 'ENABLE_ORYX_BUILD', string(parameters('enableOryxBuild'))), if(and(equals(parameters('runtimeName'), 'python'), equals(parameters('appCommandLine'), '')), createObject('PYTHON_ENABLE_GUNICORN_MULTIWORKERS', 'true'), createObject()), if(not(empty(parameters('applicationInsightsName'))), createObject('APPLICATIONINSIGHTS_CONNECTION_STRING', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString), createObject()), if(not(empty(parameters('keyVaultName'))), createObject('AZURE_KEY_VAULT_ENDPOINT', reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2022-07-01').vaultUri), createObject()))]"
                            }
                          },
                          "template": {
                            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                            "contentVersion": "1.0.0.0",
                            "metadata": {
                              "_generator": {
                                "name": "bicep",
                                "version": "0.25.53.49325",
                                "templateHash": "1502109241172037927"
                              },
                              "description": "Updates app settings for an Azure App Service."
                            },
                            "parameters": {
                              "name": {
                                "type": "string",
                                "metadata": {
                                  "description": "The name of the app service resource within the current resource group scope"
                                }
                              },
                              "appSettings": {
                                "type": "object",
                                "metadata": {
                                  "description": "The app settings to be applied to the app service"
                                }
                              }
                            },
                            "resources": [
                              {
                                "type": "Microsoft.Web/sites/config",
                                "apiVersion": "2022-03-01",
                                "name": "[format('{0}/{1}', parameters('name'), 'appsettings')]",
                                "properties": "[parameters('appSettings')]"
                              }
                            ]
                          }
                        },
                        "dependsOn": [
                          "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                        ]
                      }
                    ],
                    "outputs": {
                      "identityPrincipalId": {
                        "type": "string",
                        "value": "[if(parameters('managedIdentity'), reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-03-01', 'full').identity.principalId, '')]"
                      },
                      "name": {
                        "type": "string",
                        "value": "[parameters('name')]"
                      },
                      "uri": {
                        "type": "string",
                        "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-03-01').defaultHostName)]"
                      }
                    }
                  }
                }
              }
            ],
            "outputs": {
              "SERVICE_HELLOWORLD_IDENTITY_PRINCIPAL_ID": {
                "type": "string",
                "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.identityPrincipalId.value]"
              },
              "SERVICE_HELLOWORLD_NAME": {
                "type": "string",
                "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.name.value]"
              },
              "SERVICE_HELLOWORLD_URI": {
                "type": "string",
                "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-app-module', parameters('name'))), '2022-09-01').outputs.uri.value]"
              }
            }
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.Resources/deployments', 'appserviceplan')]"
        ]
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2022-09-01",
        "name": "appserviceplan",
        "properties": {
          "expressionEvaluationOptions": {
            "scope": "inner"
          },
          "mode": "Incremental",
          "parameters": {
            "name": "[if(not(empty(parameters('appServicePlanName'))), createObject('value', parameters('appServicePlanName')), createObject('value', format('{0}{1}', variables('abbrs').webServerFarms, variables('resourceToken'))))]",
            "location": {
              "value": "[parameters('location')]"
            },
            "tags": {
              "value": "[variables('tags')]"
            },
            "sku": {
              "value": {
                "name": "B1"
              }
            }
          },
          "template": {
            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "metadata": {
              "_generator": {
                "name": "bicep",
                "version": "0.25.53.49325",
                "templateHash": "7476659406584400671"
              },
              "description": "Creates an Azure App Service plan."
            },
            "parameters": {
              "name": {
                "type": "string"
              },
              "location": {
                "type": "string",
                "defaultValue": "[resourceGroup().location]"
              },
              "tags": {
                "type": "object",
                "defaultValue": {}
              },
              "kind": {
                "type": "string",
                "defaultValue": ""
              },
              "reserved": {
                "type": "bool",
                "defaultValue": true
              },
              "sku": {
                "type": "object"
              }
            },
            "resources": [
              {
                "type": "Microsoft.Web/serverfarms",
                "apiVersion": "2022-03-01",
                "name": "[parameters('name')]",
                "location": "[parameters('location')]",
                "tags": "[parameters('tags')]",
                "sku": "[parameters('sku')]",
                "kind": "[parameters('kind')]",
                "properties": {
                  "reserved": "[parameters('reserved')]"
                }
              }
            ],
            "outputs": {
              "id": {
                "type": "string",
                "value": "[resourceId('Microsoft.Web/serverfarms', parameters('name'))]"
              },
              "name": {
                "type": "string",
                "value": "[parameters('name')]"
              }
            }
          }
        }
      }
    ],
    "outputs": {
      "AZURE_LOCATION": {
        "type": "string",
        "value": "[parameters('location')]"
      },
      "AZURE_TENANT_ID": {
        "type": "string",
        "value": "[tenant().tenantId]"
      },
      "SERVICE_API_ENDPOINTS": {
        "type": "array",
        "value": [
          "[reference(resourceId('Microsoft.Resources/deployments', 'helloworld'), '2022-09-01').outputs.SERVICE_HELLOWORLD_URI.value]"
        ]
      }
    }
  }